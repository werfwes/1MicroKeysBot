import telebot
import requests
import json
import sqlite3
import random
import datetime

win10ProPrice = 250
win10HomePrice = 300
off16Price = 290

QIWI_TOKEN = 'aeb2480de5814b00f4ffe8b4272d3e04'
QIWI_ACCOUNT = '+79138653949'
while True:
    try:
        status = '‚ùå–ù–µ –æ–ø–ª–∞—á–µ–Ω–æ'
        bot = telebot.TeleBot('1398903140:AAFIMM6N_gzOTOt91jdlHqs4Ka6wyYESwtA')
        keyboardStart = telebot.types.ReplyKeyboardMarkup(True, True)
        keyboardStart.row('–ö–ª—é—á–∏üîë', '–ü–æ–º–æ—â—å‚öô')


        @bot.message_handler(commands=['start'])
        def start_message(message):
            bot.send_message(message.chat.id,
                             '–ü—Ä–∏–≤–µ—Ç!\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –∫—É–ø–∏—Ç—å –∫–ª—é—á –¥–ª—è Windows 10 –∏–ª–∏ MS Office' + u'\U0001F609',
                             reply_markup=keyboardStart)


        keyboardBuy = telebot.types.ReplyKeyboardMarkup(True, True)
        keyboardBuy.row('–ö—É–ø–∏—Ç—åüí∏', '–í—ã—Ö–æ–¥‚ùå')

        keyboardChose = telebot.types.ReplyKeyboardMarkup(True, True)
        keyboardChose.row('‚úÖWindows 10 Pro')
        keyboardChose.row('‚úÖWindows 10 Home')
        keyboardChose.row('‚úÖOffice 2016')
        keyboardChose.row('–í—ã—Ö–æ–¥‚ùå')

        keyboardExit = telebot.types.ReplyKeyboardMarkup(True, True)
        keyboardExit.row('–í—ã—Ö–æ–¥‚ùå')


        @bot.message_handler(content_types=['text'])
        def text_message(message):
            if message.text.lower() == '–ø–æ–º–æ—â—å‚öô':
                bot.send_message(message.chat.id, '–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏—Ç–µ —Å—é–¥–∞: \n'
                                                  '@werfwes')


            elif message.text.lower() == '–∫–ª—é—á–∏üîë':
                msg = '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏: \n' \
                      '‚ûñ‚ûñ‚ûñWindows‚ûñ‚ûñ‚ûñ\n' \
                      '    üîêWindows 10 Pro \n' \
                      '                  ‚û°' + str(win10ProPrice) + ' —Ä—É–±. | ' + str(sum(1 for line in open('Win10ProKeys.txt', 'r'))) + ' —à—Ç.' + '\n' \
                      '    üîêWindows 10 Home \n' \
                      '                  ‚û°' + str(win10HomePrice) + ' —Ä—É–±. | ' + str(sum(1 for line in open('Win10HomeKeys.txt', 'r'))) + ' —à—Ç.' + '\n' \
                      '‚ûñ‚ûñ‚ûñOffice‚ûñ‚ûñ‚ûñ\n' \
                      '    üîêOffice 2016 \n' \
                      '                  ‚û°' + str(off16Price) + ' —Ä—É–±. | ' + str(sum(1 for line in open('Off16Keys.txt', 'r'))) + ' —à—Ç.'
                bot.send_message(message.chat.id, msg, reply_markup=keyboardBuy)


            elif message.text.lower() == '–≤—ã—Ö–æ–¥‚ùå':
                bot.send_message(message.chat.id,
                                 '–ü—Ä–∏–≤–µ—Ç!\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –∫—É–ø–∏—Ç—å –∫–ª—é—á –¥–ª—è Windows 10 –∏–ª–∏ MS Office' + u'\U0001F609',
                                 reply_markup=keyboardStart)

            elif message.text.lower() == '–∫—É–ø–∏—Ç—åüí∏':
                bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ —Ç–æ–≤–∞—Ä', reply_markup=keyboardChose)


            elif message.text == '‚úÖWindows 10 Pro':
                if sum(1 for line in open('Win10ProKeys.txt', 'r')) > 0:
                    markup = telebot.types.InlineKeyboardMarkup()
                    markup.add(telebot.types.InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É', callback_data=3))
                    bot.send_message(message.chat.id, '–û–ø–ª–∞—Ç–∞:', reply_markup=keyboardExit)

                    random_code = random.randint(1000000, 9999999)
                    conn = sqlite3.connect('db.db')
                    conn.execute("CREATE TABLE IF NOT EXISTS payment_query(user_id INTEGER, sum INTEGER, code INTEGER)")
                    conn.execute(
                        f"INSERT INTO payment_query VALUES({message.from_user.id}, {win10ProPrice}, {random_code})")
                    conn.commit()
                    conn.close()

                    bot.send_message(message.chat.id,
                                     f'–î–ª—è –æ–ø–ª–∞—Ç—ã –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ {str(win10ProPrice)} —Ä—É–±–ª–µ–π –Ω–∞ —Å—á–µ—Ç QIWI \n'
                                     f'–ù–æ–º–µ—Ä: {QIWI_ACCOUNT} \n'
                                     f'K–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {str(random_code)}')
                    bot.send_message(message.chat.id, f'–°—Ç–∞—Ç—É—Å: {status}', reply_markup=markup)
                else:
                    bot.send_message(message.chat.id, '–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏, –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ :(')



            elif message.text == '‚úÖWindows 10 Home':
                if sum(1 for line in open('Win10HomeKeys.txt', 'r')) > 0:
                    markup = telebot.types.InlineKeyboardMarkup()
                    markup.add(telebot.types.InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É', callback_data=3))
                    bot.send_message(message.chat.id, '–û–ø–ª–∞—Ç–∞:', reply_markup=keyboardExit)

                    random_code = random.randint(1000000, 9999999)
                    conn = sqlite3.connect('db.db')
                    conn.execute("CREATE TABLE IF NOT EXISTS payment_query(user_id INTEGER, sum INTEGER, code INTEGER)")
                    conn.execute(
                        f"INSERT INTO payment_query VALUES({message.from_user.id}, {win10HomePrice}, {random_code})")
                    conn.commit()
                    conn.close()

                    bot.send_message(message.chat.id,
                                     f'–î–ª—è –æ–ø–ª–∞—Ç—ã –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ {str(win10HomePrice)} —Ä—É–±–ª–µ–π –Ω–∞ —Å—á–µ—Ç QIWI \n'
                                     f'–ù–æ–º–µ—Ä: {QIWI_ACCOUNT} \n'
                                     f'K–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {str(random_code)}')
                    bot.send_message(message.chat.id, f'–°—Ç–∞—Ç—É—Å: {status}', reply_markup=markup)
                else:
                    bot.send_message(message.chat.id, '–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏, –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ :(')


            elif message.text == '‚úÖOffice 2016':
                if sum(1 for line in open('Off16Keys.txt', 'r')) > 0:
                    markup = telebot.types.InlineKeyboardMarkup()
                    markup.add(telebot.types.InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É', callback_data=3))
                    bot.send_message(message.chat.id, '–û–ø–ª–∞—Ç–∞:', reply_markup=keyboardExit)

                    random_code = random.randint(1000000, 9999999)
                    conn = sqlite3.connect('db.db')
                    conn.execute("CREATE TABLE IF NOT EXISTS payment_query(user_id INTEGER, sum INTEGER, code INTEGER)")
                    conn.execute(
                        f"INSERT INTO payment_query VALUES({message.from_user.id}, {off16Price}, {random_code})")
                    conn.commit()
                    conn.close()

                    bot.send_message(message.chat.id,
                                     f'–î–ª—è –æ–ø–ª–∞—Ç—ã –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ {str(off16Price)} —Ä—É–±–ª–µ–π –Ω–∞ —Å—á–µ—Ç QIWI \n'
                                     f'–ù–æ–º–µ—Ä: {QIWI_ACCOUNT} \n'
                                     f'K–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {str(random_code)}')
                    bot.send_message(message.chat.id, f'–°—Ç–∞—Ç—É—Å: {status}', reply_markup=markup)
                else:
                    bot.send_message(message.chat.id, '–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏, –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ :(')

            else:
                print(f'Unknown message:{message.text}')
                bot.send_message(message.chat.id, '–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç(')


        @bot.callback_query_handler(func=lambda call: True)
        def query_handler(call):

            if call.data == '3':
                conn = sqlite3.connect('db.db')
                s = requests.Session()
                s.headers['authorization'] = 'Bearer ' + QIWI_TOKEN
                parameters = {'rows': '50'}
                h = s.get('https://edge.qiwi.com/payment-history/v1/persons/' + QIWI_ACCOUNT + '/payments',
                          params=parameters)
                req = json.loads(h.text)

                result = conn.execute(
                    f"SELECT * FROM payment_query WHERE user_id = {call.message.chat.id}").fetchone()  # –¥–æ—Å—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã

                random_code = result[2]
                sum = result[1]

                # –ø—Ä–æ—Ö–æ–¥–∏–º—Å—è —Ü–∏–∫–ª–æ–º –ø–æ —Å–ª–æ–≤–∞—Ä—é
                for i in range(len(req['data'])):
                    if req['data'][i]['comment'] == str(random_code) and req['data'][i]['sum']['amount'] == sum:
                        bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)

                        status = '‚úÖ–û–ø–ª–∞—á–µ–Ω–æ'
                        bot.edit_message_text(f'–°—Ç–∞—Ç—É—Å: {status}', call.message.chat.id, call.message.message_id)

                        conn.execute(
                            f"DELETE FROM payment_query WHERE user_id = {call.message.chat.id}")  # —É–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
                        print(f'succesful:{call.message.chat.id},{random_code}, {sum}, {datetime.datetime.now()}')  # –ó–∞–ø–∏—Å—å –ª–æ–≥–∞

                        # –í—ã–¥–∞—á–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∫–ª—é—á–∞ –∏–∑ —Ñ–∞–π–ª–∞
                        # –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–∞
                        filename = ''
                        if sum == win10ProPrice:
                            filename = 'Win10ProKeys.txt'
                        elif sum == win10HomePrice:
                            filename = 'Win10HomeKeys.txt'
                        elif sum == off16Price:
                            filename = 'Off16Keys.txt'

                        # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏
                        f = open(filename, "r+")
                        d = f.readlines()
                        key = d[0]
                        bot.send_message(call.message.chat.id, f'–í–∞—à –∫–ª—é—á:\n{key}')
                        f.seek(0)
                        for i in d:
                            if i != key:
                                f.write(i)
                        f.truncate()
                        f.close()


        bot.polling()
    except Exception as e:
        print(str(e))
